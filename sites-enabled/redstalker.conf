server {
    server_name redstalker.com;
    return 301 $scheme://www.redstalker.com$request_uri;
}

server {
    listen 80;

    server_name www.redstalker.com;
    limit_conn arbeit 32;

    ## Access and error logs.
    access_log /var/log/nginx/redstalker.com_access.log;
    error_log /var/log/nginx/redstalker.com_error.log;

    ## See the blacklist.conf file at the parent dir: /etc/nginx.
    ## Deny access based on the User-Agent header.
    if ($bad_bot) {
        return 444;
    }
    ## Deny access based on the Referer header.
    if ($bad_referer) {
        return 444;
    }

    ## Filesystem root of the site and index.
    root /srv/redstalker.com/_counter;
    index index.html index.php;

    #unless request is for a valid file (image, js, css, etc), send to index.php
    location / {
        expires max;
        charset utf-8;
        add_header Vary "Accept-Encoding, Cookie";
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
        try_files $uri $uri/ /index.html?$args;
    }

    #catch all
    #error_page 404 /index.php;

    location ~* \.(?:ico|css|js|gif|jpe?g|png)$ {
        expires max;
        add_header Pragma public;
        add_header Cache-Control "public, must-revalidate, proxy-revalidate";
    }

    location = /favicon.ico { access_log off; log_not_found off; }	
    location = /robots.txt { access_log off; log_not_found off; }
    location ~ /\. { deny  all; access_log off; log_not_found off; }

    location ~ \.php$ {

        # for security reasons the next line is highly encouraged
        try_files $uri =404;

        ## If you're using a Nginx version greater or equal to 1.1.4 then
        ## you can use keep alive connections to the upstream be it
        ## FastCGI or Apache. If that's not the case comment out the line below.
        fastcgi_keep_conn on; # keep alive to the FCGI upstream

        fastcgi_param  QUERY_STRING       $query_string;
        fastcgi_param  REQUEST_METHOD     $request_method;
        fastcgi_param  CONTENT_TYPE       $content_type;
        fastcgi_param  CONTENT_LENGTH     $content_length;

        fastcgi_param  SCRIPT_NAME        $document_root$fastcgi_script_name;

        # if the next line in yours still contains $document_root
        # consider switching to $request_filename provides
        # better support for directives such as alias
        fastcgi_param  SCRIPT_FILENAME    $document_root$fastcgi_script_name;

        fastcgi_param  REQUEST_URI        $request_uri;
        fastcgi_param  DOCUMENT_URI       $document_uri;
        fastcgi_param  DOCUMENT_ROOT      $document_root;
        fastcgi_param  SERVER_PROTOCOL    $server_protocol;

        fastcgi_param  GATEWAY_INTERFACE  CGI/1.1;
        fastcgi_param  SERVER_SOFTWARE    nginx;

        fastcgi_param  REMOTE_ADDR        $remote_addr;
        fastcgi_param  REMOTE_PORT        $remote_port;
        fastcgi_param  SERVER_ADDR        $server_addr;
        fastcgi_param  SERVER_PORT        $server_port;
        fastcgi_param  SERVER_NAME        $server_name;

        # If using a unix socket...
        fastcgi_pass phpcgi;
    } 
    
}
